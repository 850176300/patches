diff --git a/src/libANGLE/Display.cpp b/src/libANGLE/Display.cpp
index 7b1cdd234..c1104be85 100644
--- a/src/libANGLE/Display.cpp
+++ b/src/libANGLE/Display.cpp
@@ -189,7 +189,9 @@ EGLAttrib GetDisplayTypeFromEnvironment()
     }
 #endif
 
-#if defined(ANGLE_ENABLE_D3D11)
+#if defined(ANGLE_DEFAULT_D3D11) && defined(ANGLE_ENABLE_D3D9) && !ANGLE_DEFAULT_D3D11
+    return EGL_PLATFORM_ANGLE_TYPE_DEFAULT_ANGLE;
+#elif defined(ANGLE_ENABLE_D3D11)
     return EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE;
 #elif defined(ANGLE_ENABLE_D3D9)
     return EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE;
@@ -250,13 +252,20 @@ rx::DisplayImpl *CreateDisplayFromAttribs(EGLAttrib displayType,
                                           EGLAttrib platformType,
                                           const DisplayState &state)
 {
+#if !defined(ANGLE_ENABLE_D3D9) && !defined(ANGLE_ENABLE_D3D11)
     ASSERT(displayType != EGL_PLATFORM_ANGLE_TYPE_DEFAULT_ANGLE);
+#endif
     rx::DisplayImpl *impl = nullptr;
 
     switch (displayType)
     {
         case EGL_PLATFORM_ANGLE_TYPE_DEFAULT_ANGLE:
+#if defined(ANGLE_ENABLE_D3D9) || defined(ANGLE_ENABLE_D3D11)
+            impl = new rx::DisplayD3D(state);
+#else
+            // A default display was requested on a platform that doesn't support it
             UNREACHABLE();
+#endif
             break;
 
         case EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE:
